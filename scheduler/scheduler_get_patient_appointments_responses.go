// Code generated by go-swagger; DO NOT EDIT.

package scheduler

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/shillingio/scheduling.go/models"
)

// SchedulerGetPatientAppointmentsReader is a Reader for the SchedulerGetPatientAppointments structure.
type SchedulerGetPatientAppointmentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SchedulerGetPatientAppointmentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSchedulerGetPatientAppointmentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSchedulerGetPatientAppointmentsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSchedulerGetPatientAppointmentsOK creates a SchedulerGetPatientAppointmentsOK with default headers values
func NewSchedulerGetPatientAppointmentsOK() *SchedulerGetPatientAppointmentsOK {
	return &SchedulerGetPatientAppointmentsOK{}
}

/* SchedulerGetPatientAppointmentsOK describes a response with status code 200, with default header values.

A successful response.
*/
type SchedulerGetPatientAppointmentsOK struct {
	Payload *models.SchedulerAppointmentResponse
}

func (o *SchedulerGetPatientAppointmentsOK) Error() string {
	return fmt.Sprintf("[GET /v1/patients/{patient_id}/appointments][%d] schedulerGetPatientAppointmentsOK  %+v", 200, o.Payload)
}
func (o *SchedulerGetPatientAppointmentsOK) GetPayload() *models.SchedulerAppointmentResponse {
	return o.Payload
}

func (o *SchedulerGetPatientAppointmentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SchedulerAppointmentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchedulerGetPatientAppointmentsDefault creates a SchedulerGetPatientAppointmentsDefault with default headers values
func NewSchedulerGetPatientAppointmentsDefault(code int) *SchedulerGetPatientAppointmentsDefault {
	return &SchedulerGetPatientAppointmentsDefault{
		_statusCode: code,
	}
}

/* SchedulerGetPatientAppointmentsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type SchedulerGetPatientAppointmentsDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the scheduler get patient appointments default response
func (o *SchedulerGetPatientAppointmentsDefault) Code() int {
	return o._statusCode
}

func (o *SchedulerGetPatientAppointmentsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/patients/{patient_id}/appointments][%d] Scheduler_GetPatientAppointments default  %+v", o._statusCode, o.Payload)
}
func (o *SchedulerGetPatientAppointmentsDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *SchedulerGetPatientAppointmentsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
