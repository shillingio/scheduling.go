// Code generated by go-swagger; DO NOT EDIT.

package scheduler

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/shillingio/scheduling.go/models"
)

// SchedulerSearchAvailabilityReader is a Reader for the SchedulerSearchAvailability structure.
type SchedulerSearchAvailabilityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SchedulerSearchAvailabilityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSchedulerSearchAvailabilityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSchedulerSearchAvailabilityDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSchedulerSearchAvailabilityOK creates a SchedulerSearchAvailabilityOK with default headers values
func NewSchedulerSearchAvailabilityOK() *SchedulerSearchAvailabilityOK {
	return &SchedulerSearchAvailabilityOK{}
}

/* SchedulerSearchAvailabilityOK describes a response with status code 200, with default header values.

A successful response.
*/
type SchedulerSearchAvailabilityOK struct {
	Payload *models.SchedulerAvailabilityResponse
}

func (o *SchedulerSearchAvailabilityOK) Error() string {
	return fmt.Sprintf("[POST /v1/search/availability][%d] schedulerSearchAvailabilityOK  %+v", 200, o.Payload)
}
func (o *SchedulerSearchAvailabilityOK) GetPayload() *models.SchedulerAvailabilityResponse {
	return o.Payload
}

func (o *SchedulerSearchAvailabilityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SchedulerAvailabilityResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchedulerSearchAvailabilityDefault creates a SchedulerSearchAvailabilityDefault with default headers values
func NewSchedulerSearchAvailabilityDefault(code int) *SchedulerSearchAvailabilityDefault {
	return &SchedulerSearchAvailabilityDefault{
		_statusCode: code,
	}
}

/* SchedulerSearchAvailabilityDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type SchedulerSearchAvailabilityDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the scheduler search availability default response
func (o *SchedulerSearchAvailabilityDefault) Code() int {
	return o._statusCode
}

func (o *SchedulerSearchAvailabilityDefault) Error() string {
	return fmt.Sprintf("[POST /v1/search/availability][%d] Scheduler_SearchAvailability default  %+v", o._statusCode, o.Payload)
}
func (o *SchedulerSearchAvailabilityDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *SchedulerSearchAvailabilityDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
